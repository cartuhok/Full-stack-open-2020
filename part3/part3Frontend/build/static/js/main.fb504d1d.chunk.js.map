{"version":3,"sources":["components/Filter.js","components/Person.js","components/People.js","components/PersonForm.js","services/people.js","components/Notification.js","components/App.js","index.js"],"names":["Filter","props","value","onChange","Person","name","number","onClick","handleDelete","People","persons","newSearch","peopleArray","map","person","toLowerCase","includes","id","PersonForm","onSubmit","type","baseUrl","axios","get","then","response","data","newPerson","post","personURL","delete","newNumber","put","Notification","message","className","status","App","useState","setPersons","newName","setNewName","setNewNumber","setNewSearch","notification","setNotification","setStatus","setPeople","peopleService","initialPeople","useEffect","event","target","preventDefault","matchCheck","nameObj","window","confirm","personToUpdate","find","p","updatedNumber","setTimeout","console","log","alert","concat","returnedPerson","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb504d1d.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = (props) => { \n    return ( \n        <div>\n        search contacts: <input \n                value={props.value}\n                onChange={props.onChange}   \n              />\n    </div>\n    )\n}\n\nexport default Filter","import React from 'react'\n\nconst Person = props => (\n    <p> {props.name}: {props.number} <button value={props.value} name={props.name} onClick={props.handleDelete}>delete</button> </p>\n)\n\nexport default Person","import React from 'react'\nimport Person from './Person';\n\nconst People = ({persons, newSearch, handleDelete}) => {\n    const peopleArray = persons.map(person => person.name.toLowerCase().includes(newSearch.toLowerCase()) ? <Person handleDelete={handleDelete} value={person.id} name={person.name} number={person.number} key={person.name}/> : null )\n    return (\n        <div>\n            {peopleArray}\n        </div>\n    )\n}\n\nexport default People","import React from 'react'\n\nconst PersonForm = (props) => {  \n    return (\n    <form onSubmit={props.onSubmit}>\n            <div>\n            name: <input \n                    value={props.name.value}\n                    onChange={props.name.onChange}   \n                    />\n            </div>\n            <div>\n            number: <input\n                        value={props.number.value}\n                        onChange={props.number.onChange}\n                    />\n            </div>\n            <div>\n            <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default PersonForm","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newPerson => {\n    const request = axios.post(baseUrl, newPerson)\n    return request.then(response => response.data)\n}\n\nconst remove = id => {\n    const personURL = `${baseUrl}/${id.value}`\n    const request = axios.delete(personURL)\n    return request.then(response => response.data)\n}\n\nconst swap = newNumber => {\n    const request = axios.put(`${baseUrl}/${newNumber.id}`, newNumber)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, remove, swap }\n","import React from 'react'\n\nconst Notification = props => {\n    if (props.message === null) {\n      return null\n    }\n  \n    return (\n      <div className={props.status}>\n        {props.message}\n      </div>\n    )\n  }\n\n  export default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './Filter'\nimport People from './People'\nimport PersonForm from './PersonForm'\nimport peopleService from '../services/people'\nimport Notification from './Notification'\n\n\nconst App = () => {\n  \n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newSearch, setNewSearch ] = useState('')\n  const [notification, setNotification] = useState(null)\n  const [status, setStatus] = useState('')\n\n\n  const setPeople = () => peopleService.getAll()\n  .then(initialPeople => {\n    setPersons(initialPeople)\n  })\n\n  useEffect(() => {\n    setPeople()\n  }, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleSearchChange = (event) => {\n    setNewSearch(event.target.value)\n  }\n    \n  const addName = (event) => {\n    event.preventDefault()\n    \n    const matchCheck = persons.map(person => person.name === newName)\n    \n    const nameObj = {\n      name: newName,\n      number: newNumber\n    }\n\n    const alert = () => {\n      const confirm = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n      if(confirm) {\n        const personToUpdate = persons.find(p => p.name === newName)\n        const updatedNumber = {...personToUpdate, number: newNumber}\n        peopleService.swap(updatedNumber).then(newNumber => {\n          setPersons(persons.map(person => person.id !== newNumber.id ? person : newNumber))\n          setNewName('')\n          setNewNumber('')\n          setStatus('success')\n          setNotification(`Updated ${newNumber.name}`)\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n        })\n      } else {\n          console.log('nope.')\n      }\n    }\n\n    const handleNewNames = () => { \n      setPersons(persons.concat(nameObj))\n      setNewName('')\n      setNewNumber('')\n      setStatus('success')\n      setNotification(`Added ${nameObj.name}`)\n      setTimeout(() => {\n        setNotification(null)\n      }, 5000)\n    }\n      \n    if (matchCheck.includes(true)) {\n      alert()\n    } else {\n      handleNewNames() \n      peopleService.create(nameObj)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n      })\n    }\n\n  }\n\n  const handleDelete = (event) => {\n    const confirm = window.confirm(`Are you sure you want to delete ${event.target.name} ?`)\n    if (confirm) {\n      peopleService.remove(event.target).then(() => {\n        setPeople()\n    }).catch(error => {\n      setStatus('error')\n      setNotification(`${event.target.name} has already been removed from the server`)\n      setTimeout(() => {\n        setNotification(null)\n      }, 5000)\n    })\n    } else {\n        console.log('nope.');\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} status={status} />\n      <Filter value={newSearch} onChange={handleSearchChange} />\n      <h2>Add New Contact:</h2>\n      <PersonForm \n        onSubmit={addName}\n        name={{value: newName, onChange: handleNameChange}}\n        number={{value: newNumber, onChange: handleNumberChange}}\n      />\n      <h2>Numbers</h2>\n      <People persons={persons} newSearch={newSearch} handleDelete={handleDelete}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}