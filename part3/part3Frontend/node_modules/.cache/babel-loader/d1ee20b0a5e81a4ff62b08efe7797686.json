{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/carterrink/Desktop/Full-stack-open-2020/part2/part2.15-2.18/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Filter from './Filter';\nimport People from './People';\nimport PersonForm from './PersonForm';\nimport peopleService from '../services/people';\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [newSearch, setNewSearch] = useState('');\n\n  const setPeople = () => peopleService.getAll().then(initialPeople => {\n    setPersons(initialPeople);\n  });\n\n  useEffect(() => {\n    setPeople();\n  }, []);\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleSearchChange = event => {\n    setNewSearch(event.target.value);\n  };\n\n  const addName = event => {\n    event.preventDefault();\n    const matchCheck = persons.map(person => person.name === newName);\n    const nameObj = {\n      name: newName,\n      number: newNumber\n    };\n\n    const alert = () => {\n      const confirm = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`);\n\n      if (confirm) {\n        peopleService.replace(nameObj, persons).then(returnedPeople => {\n          setPersons(persons.map(person => person.name !== newName ? person : returnedPeople.data));\n        });\n      } else {}\n\n      setPersons(persons);\n      setNewName('');\n      setNewNumber('');\n    };\n\n    const handleNewNames = () => {\n      setPersons(persons.concat(nameObj));\n      setNewName('');\n      setNewNumber('');\n    };\n\n    if (matchCheck.includes(true)) {\n      alert();\n    } else {\n      handleNewNames();\n      peopleService.create(nameObj).then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson));\n        setNewName('');\n        setNewNumber('');\n      });\n    }\n  };\n\n  const handleDelete = event => {\n    const confirm = window.confirm(`Are you sure you want to delete ${event.target.name} ?`);\n\n    if (confirm) {\n      peopleService.remove(event.target).then(() => {\n        setPeople();\n      });\n    } else {\n      console.log('nope.');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      value: newSearch,\n      onChange: handleSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add New Contact:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonForm, {\n      onSubmit: addName,\n      name: {\n        value: newName,\n        onChange: handleNameChange\n      },\n      number: {\n        value: newNumber,\n        onChange: handleNumberChange\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(People, {\n      persons: persons,\n      newSearch: newSearch,\n      handleDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"nQPWEFlGmfM9JsHZRDbW5L3/5HI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/carterrink/Desktop/Full-stack-open-2020/part2/part2.15-2.18/src/components/App.js"],"names":["React","useState","useEffect","Filter","People","PersonForm","peopleService","App","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newSearch","setNewSearch","setPeople","getAll","then","initialPeople","handleNameChange","event","target","value","handleNumberChange","handleSearchChange","addName","preventDefault","matchCheck","map","person","name","nameObj","number","alert","confirm","window","replace","returnedPeople","data","handleNewNames","concat","includes","create","returnedPerson","handleDelete","remove","console","log","onChange"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Filter from './Filter'\nimport People from './People'\nimport PersonForm from './PersonForm'\nimport peopleService from '../services/people'\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newSearch, setNewSearch ] = useState('')\n\n\nconst setPeople = () => peopleService.getAll()\n.then(initialPeople => {\n  setPersons(initialPeople)\n})\n\n  useEffect(() => {\n    setPeople()\n  }, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleSearchChange = (event) => {\n    setNewSearch(event.target.value)\n  }\n  \n  const addName = (event) => {\n    event.preventDefault()\n\n    const matchCheck = persons.map(person => person.name === newName)\n\n    const nameObj = {\n      name: newName,\n      number: newNumber\n    }\n\n    const alert = () => {\n      const confirm = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n      if(confirm) {\n        peopleService.replace(nameObj, persons).then(returnedPeople => {\n          setPersons(persons.map(person => person.name !== newName ? person : returnedPeople.data))\n        })\n      } else {\n\n      }\n      setPersons(persons)\n      setNewName('')\n      setNewNumber('')\n    }\n\n    const handleNewNames = () => { \n      setPersons(persons.concat(nameObj))\n      setNewName('')\n      setNewNumber('')\n    }\n    \n    if (matchCheck.includes(true)) {\n      alert()\n    } else {\n      handleNewNames() \n      peopleService.create(nameObj)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n      })\n    }\n\n\n  }\n\n  const handleDelete = (event) => {\n    const confirm = window.confirm(`Are you sure you want to delete ${event.target.name} ?`)\n    if (confirm) {\n      peopleService.remove(event.target).then(() => {\n        setPeople()\n    })\n    } else {\n        console.log('nope.');\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter value={newSearch} onChange={handleSearchChange} />\n\n      <h2>Add New Contact:</h2>\n      <PersonForm \n        onSubmit={addName}\n        name={{value: newName, onChange: handleNameChange}}\n        number={{value: newNumber, onChange: handleNumberChange}}\n      />\n\n      <h2>Numbers</h2>\n      <People persons={persons} newSearch={newSearch} handleDelete={handleDelete}/>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}